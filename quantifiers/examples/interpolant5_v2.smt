(set-option :produce-interpolants true)

(declare-fun p1_0 ((Int)) Bool)
(declare-fun p2_1 ((Int)) Bool)
(declare-fun p2_2 ((Int)) Bool)
(declare-fun p3_2 ((Int)) Bool)
(declare-fun p2_3 ((Int)) Bool)
(declare-fun p3_3 ((Int)) Bool)
(declare-fun p2_4 ((Int)) Bool)
(declare-fun p3_4 ((Int)) Bool)
(declare-fun p2_5 ((Int)) Bool)
(declare-fun p3_5 ((Int)) Bool)
(declare-fun p2_6 ((Int)) Bool)
(declare-fun p3_6 ((Int)) Bool)

(declare-fun q1_0 ((Int) (Int)) Bool)
(declare-fun q2_1 ((Int) (Int)) Bool)
(declare-fun q2_2 ((Int) (Int)) Bool)
(declare-fun q3_2 ((Int) (Int)) Bool)
(declare-fun q2_3 ((Int) (Int)) Bool)
(declare-fun q3_3 ((Int) (Int)) Bool)
(declare-fun q2_4 ((Int) (Int)) Bool)
(declare-fun q3_4 ((Int) (Int)) Bool)
(declare-fun q2_5 ((Int) (Int)) Bool)
(declare-fun q3_5 ((Int) (Int)) Bool)
(declare-fun q2_6 ((Int) (Int)) Bool)
(declare-fun q3_6 ((Int) (Int)) Bool)

(declare-const x_1 Int)
(declare-const x_2 Int)
(declare-const x_3 Int)
(declare-const x_4 Int)
(declare-const x_5 Int)
(declare-const x_6 Int)

(compute-interpolant
(and (p1_0 0) (q1_0 0 0))
(and
	(implies (p1_0 0) (and (= x_1 0) (p2_1 x_1)))
	(implies (q1_0 0 0) (or (distinct x_1 0) (q2_1 x_1 1)))
)
(and
	(implies (p2_1 x_1) (or (and (= x_2 (+ x_1 1)) (p2_2 x_2)) (and (= x_2 x_1) (p3_2 x_2))))
	(implies (q2_1 x_1 1) (and (or (distinct x_2 1) (q2_2 x_2 (+ 1 1))) (or (distinct x_2 x_1) (q3_2 x_2 1))))
)
(and
	(implies (p2_2 x_2) (or (and (= x_3 (+ x_2 1)) (p2_3 x_3)) (and (= x_3 x_2) (p3_3 x_3))))
    (implies (p3_2 x_2) false)
	(implies (q2_2 x_2 2) (and (or (distinct x_3 2) (q2_3 x_3 (+ 2 1))) (or (distinct x_3 x_2) (q3_3 x_3 2))))
	(implies (q3_2 x_2 1) false)
)
(and
	(implies (p2_3 x_3) (or (and (= x_4 (+ x_3 1)) (p2_4 x_4)) (and (= x_4 x_3) (p3_4 x_4))))
	(implies (p3_3 x_3) false)
	(implies (q2_3 x_3 3) (and (or (distinct x_4 3) (q2_4 x_4 (+ 3 1))) (or (distinct x_4 x_3) (q3_4 x_4 3))))
	(implies (q3_3 x_3 2) false)
)
(and
	(implies (p2_4 x_4) (or (and (= x_5 (+ x_4 1)) (p2_5 x_5)) (and (= x_5 x_4) (p3_5 x_5))))
	(implies (p3_4 x_4) false)
	(implies (q2_4 x_4 4) (and (or (distinct x_5 4) (q2_5 x_5 (+ 4 1))) (or (distinct x_5 x_4) (q3_5 x_5 4))))
	(implies (q3_4 x_4 3) false)
)
(and
	(implies (p2_5 x_5) (or (and (= x_6 (+ x_5 1)) (p2_6 x_6)) (and (= x_6 x_5) (p3_6 x_6))))
	(implies (p3_5 x_5) false)
	(implies (q2_5 x_5 5) (and (or (distinct x_6 5) (q2_6 x_6 (+ 5 1))) (or (distinct x_6 x_5) (q3_6 x_6 5))))
	(implies (q3_5 x_5 4) false)
)
(and
	(implies (p2_6 x_6) false)
	(implies (q3_6 x_6 5) false)
))
